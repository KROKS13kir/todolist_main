version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-37
    ports:
      - 81:80
    depends_on:
      - api
  api:
    image: kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      VK_OAUTH2_KEY: ${VK_OAUTH2_KEY}
      VK_OAUTH2_SECRET: ${VK_OAUTH2_SECRET}
      DATABASE_URL: ${DATABASE_URL}
  migrations:
    image: kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c 'python manage.py migrate'
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      VK_OAUTH2_KEY: ${VK_OAUTH2_KEY}
      VK_OAUTH2_SECRET: ${VK_OAUTH2_SECRET}
      DATABASE_URL: ${DATABASE_URL}
  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data: