version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-36
    ports:
      - 81:80
    depends_on:
      - api
  api:
    image: kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      SOCIAL_AUTH_VK_OAUTH2_KEY: $VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $VK_OAUTH2_SECRET
      DATABASE_URL: $DATABASE_URL
  migrations:
    image: kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations"
      sh -c "python manage.py migrate"
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      SOCIAL_AUTH_VK_OAUTH2_KEY: $VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $VK_OAUTH2_SECRET
      DATABASE_URL: $DATABASE_URL
  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data

volumes:
  pg_data: