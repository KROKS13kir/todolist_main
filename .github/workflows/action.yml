name: Build and deploy workflow
on:
  - push
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: docker build
        run: docker build -t kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push kroks/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DEBUG: True
      VK_OAUTH2_KEY: 51487461
      VK_OAUTH2_SECRET: vE9uWVPGL0LMWe71LioR
      SECRET_KEY: django-insecure-k#mffsauvdt_*dp5v-yg^)r#s!o*kv*_k$ia1lvxfd!e%$o9dk
      ALLOWED_HOSTS: [*]
      DATABASE_URL: DATABASE_URL=psql://postgres:postgres@postgres:5432/todolist
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat .env_example | envsubst > deploy/.env_example
      - name: copy file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/.env_example"
          target: "todolist"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd todolist
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d